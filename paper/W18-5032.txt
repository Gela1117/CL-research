Addressing Objects and Their Relations:
The Conversational Entity Dialogue Model

Stefan Ultes, Paweł Budzianowski, I˜nigo Casanueva, Lina Rojas-Barahona,

Bo-Hsiang Tseng, Yen-Chen Wu, Steve Young and Milica Gaˇsi´c

Cambridge University Engineering Department

{su259,pfb30,ic340,lmr46,bht26,ycw30,sjy11,mg436}@cam.ac.uk

Cambridge, United Kingdom

Abstract

Statistical spoken dialogue systems usu-
ally rely on a single- or multi-domain dia-
logue model that is restricted in its capabil-
ities of modelling complex dialogue struc-
tures, e.g., relations. In this work, we pro-
pose a novel dialogue model that is cen-
tred around entities and is able to model
relations as well as multiple entities of the
same type. We demonstrate in a prototype
implementation beneﬁts of relation mod-
elling on the dialogue level and show that
a trained policy using these relations out-
performs the multi-domain baseline. Fur-
thermore, we show that by modelling the
relations on the dialogue level, the system
is capable of processing relations present
in the user input and even learns to address
them in the system response.

Introduction

1
Data-driven statistical spoken dialogue systems
(SDS) (Lemon and Pietquin, 2012; Young et al.,
2013) are a promising approach for realizing spo-
ken dialogue interaction between humans and ma-
chines. Up until now, these systems have success-
fully been applied to single- or multi-domain task-
oriented dialogues (Su et al., 2017; Casanueva
et al., 2017; Lison, 2011; Wang et al., 2014; Pa-
pangelis and Stylianou, 2017; Gaˇsi´c et al., 2017;
Budzianowski et al., 2017; Peng et al., 2017)
where each dialogue is modelled as multiple inde-
pendent single-domain sub-dialogues. However,
this multi-domain dialogue model (MDDM) does
not offer an intuitive way of representing multi-
ple objects of the same type (e.g., multiple restau-
rants) or dynamic relations between these objects.
To the best of our knowledge, neither problem has
yet been addressed in statistical SDS research.

The goal of this paper is to propose a new di-
alogue model—the conversational entity dialogue
model (CEDM)—which offers an intuitive way of
modelling dialogues and complex dialogue struc-
tures inside the dialogue system.
Inspired by
Grosz (1978), the CEDM is centred around ob-
jects and relations instead of domains thus offer-
ing a fundamental change in how we think about
statistical dialogue modelling. The CEDM allows
• to model dynamic relations directly, indepen-
dently and persistently so that the relations
may be addressed by the user and the system,
• the system to talk about multiple objects of

the same type, e.g., multiple restaurants,

while still allowing feasible policy learning.

The remainder of the paper is organized as fol-
lows: after presenting a brief motivation and re-
lated work in Section 2, Section 3 presents back-
ground information on statistical SDSs. Section 4
contains the main contribution and describes the
conversational entity dialogue model in detail.
Looking at one aspect of the CEDM, the mod-
elling of relations, Section 5 describes a proto-
type implementation and shows the beneﬁts of the
CEDM in experiments with a simulated user. Sec-
tion 6 concludes the paper with a list of open ques-
tions which need to be addressed in future work.

2 Motivation and Related Work

To introduce the terminology that will be used in
this work and to illustrate the necessity of adequate
modelling of relations, Figure 1 shows an exam-
ple dialogue about hotels and restaurants in Cam-
bridge with the relation in the same area. Instead
of talking about a sequence of domains, the sys-
tem and the user talk about different objects and
relations. Each part of the dialogue thus may be

ProceedingsoftheSIGDIAL2018Conference,pages273–283,Melbourne,Australia,12-14July2018.c(cid:13)2018AssociationforComputationalLinguistics273Figure 1: A dialogue between the system (S) and a user (U) about a restaurant and a hotel in the same
area along with the mapping of fractions of the dialogue to the respective objects (of predeﬁned types)
and the relation. All objects and relations reside inside a conversational world.

mapped to an object or a relation in the conver-
sational world or may be mapped to the world it-
self (grey).
In the example, the ﬁrst part (blue)
is about Object 1 of type hotel. When the focus
shifts towards Object 2 of type restaurant (green)
at U3, the user also addresses the relation (red) in
the same area between Object 1 and Object 2.

Addressing a relation in this way could still be
captured by the semantic interpretation of the user
input as the information area=centre may be de-
rived from the context. However, if the user said I
need a hotel and a restaurant in Cambridge in the
same area right in the beginning of the dialogue
(U1), no context information would be available.
To capture these dialogue structures, the dialogue
model and the corresponding dialogue state must
be able to represent them adequately.

The proposed CEDM achieves this by mod-
elling state information about conversational enti-
ties instead of domains. More precisely, it models
separate states about the objects (e.g., the hotel or
restaurant) and the relations. Previous work on di-
alogue modelling already incorporated the idea of
objects or entities to be the principal component
of the dialogue state (Grosz, 1977; Bilange, 1991;
Montoro et al., 2004; Xu and Seneff, 2010; Hein-
roth and Minker, 2013). However, these dialogue
models are not based on statistical dialogue pro-
cessing where a probability distribution over all
dialogue states needs to be modelled and main-
tained. This additional complexity, though, cannot
be incorporated in a straight-forward way into the
proposed models. In contrast, the CEDM offers

a comprehensive and consistent way of modelling
these probabilities by deﬁning and maintaining
entity-based states. Work on statistical dialogue
state modelling (Young et al., 2010; Lee and Stent,
2016; Schulz et al., 2017) also contain a variant of
objects but is still based on the MDDM thus not
offering any mechanism to model multiple enti-
ties or relations between objects. Ramachandran
and Ratnaparkhi (2015) proposed a belief track-
ing approach using relational trees. However, they
only consider static relations present in the ontol-
ogy and are not able to handle dynamic relations.

3 Statistical Spoken Dialogue Systems

Statistical SDS are model-based approaches1 and
usually assume a modular architecture (see Fig. 2).
The problem of learning the next system action
is framed as a partially-observable Markov deci-
sion process (POMDP) that accounts for the un-
certainty inherent in spoken communication. This
uncertainty is modelled in the belief state b(s) rep-
resenting a probability over all states s.

Reinforcement learning (RL) is used in such
a sequential decision-making process where the
decision-model (the policy π) is trained based on

1Model-free approaches like end-to-end generative net-
works
(Serban et al., 2016; Li et al., 2016) have interest-
ing properties (e.g., they only need text data for training) but
they still seem to be limited in terms of dialogue structure
complexity (not linguistic complexity) in cases where content
from a structured knowledge base needs to be incorporated.
Approaches where incorporating this information is learned
along with the system responses based on dialogue data (Eric
and Manning, 2017) seem hard to scale.

274Restaurantnameareafood…Entities:Objects	and	RelationsObject	TypesExample	dialogueConversational	WorldObject	1	(Hotel)name:	Royal	Camb.area:	centreObject	2	(Restaurant)name:	Golden	Housearea:	centreIs	type	ofRelation	1	(Object	1	with	Object	2)area:	sameHotelnameareastars…S1:	Hello,	howcanI	helpyou?U1:	I	needa	hotelin	Cambridge.S2:	Whatpricerangedo	youhavein	mind?U2:	Expensive.S3:	Royal	Camb.	isan	expensive	hotelin	thecentre.	U3:	Great,	I	also	needa	cheaprestaurantin	thesame	area.S4:	Whattype	offoodwouldyoulike?U4:		don’tcare.S5:	Golden	House	isa	cheapChinese	restaurantin	thecentre.U5:	Great,	thanks.S6:	Do	youneedanythingelse?U6:	Not	fornow,	bye.around domains which encapsulate all relevant in-
formation as a section of the dialogue state that
belongs to a given topic, e.g., ﬁnding a restaurant
or hotel. However, the resulting ﬂat state that is
widely used (Williams et al., 2005; Young et al.,
2010; Thomson and Young, 2010; Lee and Stent,
2016; Schulz et al., 2017, e.g.) is not intuitive to
model complex dialogue structures like relations.
To overcome this limitation, we propose the
conversational entity dialogue model which will
be described in detail in the following section.

4 Conversational Entity Dialogue Model

entity

conversational

The
dialogue model
(CEDM) is proposed as an alternative way of
statistical dialogue modelling having the concept
of entities at the core of the model. Entities
being objects or relations offer an intuitive way of
modelling complex task-oriented dialogues.

Figure 2: The modular statistical dialogue system
architecture. The dialogue manager takes the se-
mantic interpretation as input to track the belief
state. The updated state is then used by the dia-
logue policy to decide on the next system action.

sample data and a potentially delayed objective
signal (the reward r) (Sutton and Barto, 1998).
The policy selects the next action a ∈ A based
on the current system belief state b to optimise the
accumulated future reward Rt at time t:

Rt =

γkrt+k+1 .

(1)

∞(cid:88)

k=0

Here, k denotes the number of future steps, γ a
discount factor and rτ the reward at time τ.

The Q-function models the expected accumu-
lated future reward Rt when taking action a in be-
lief state b and then following policy π:

Qπ(b, a) = Eπ[Rt|bt = b, at = a] .

(2)

For most real-world problems, ﬁnding the exact
optimal Q-values is not feasible. Instead, RL al-
gorithms have been proposed for dialogue policy
learning based on approximating the Q-function
directly or employing the policy gradient theo-
rem (Williams and Young, 2006; Daubigney et al.,
2012; Gaˇsi´c and Young, 2014; Williams et al.,
2017; Su et al., 2017; Casanueva et al., 2017; Pa-
pangelis and Stylianou, 2017).

Aside from the policy model,

the dialogue
model plays an important role: it deﬁnes the struc-
ture and internal links of the dialogue state as well
as the system and user acts (i.e., the semantics the
system can understand). Thus, the policy model
is only able to learn system behaviour based on
what is deﬁned by the dialogue model. By deﬁn-
ing the dialogue state, the dialogue model further
represents an abstraction over the task ontology or
knowledge base restricting the view on the infor-
mation that is relevant so that the system is able to
converse2. Most current dialogue models are built
2Using the knowledge base directly to model the (noisy)
dialogue state (Pragst et al., 2015; Meditskos et al., 2016)
usually results in high access times.

4.1 Objects and Relations
Objects are entities of a certain object type (e.g.,
Restaurant or Hotel) where each type deﬁnes a
set of attributes (see Fig. 1). This type deﬁnition
matches the contents of the back-end knowledge
base and thus the internal representation of real-
world objects. This is similar to the deﬁnition of
domains. In contrast to domains, though, this no-
tion allows the modelling of multiple objects of the
same type within a dialogue as well as the mod-
elling of a type hierarchy which may be exploited
during policy learning.

Relations are also entities that connect objects
or attributes of objects. An example is shown in
Figure 3: the two objects obj1 and obj2 of types
Hotel and Restaurant respectively are connected
through the attribute area with the equals relation.
Possible relations may directly be derived from
the object type deﬁnitions, e.g., by allowing only
connections for attributes that represent the same
concepts like area. Note that these relations are
dynamic relations that may be drawn between ob-
jects in a conversation. This is different to static
relations which are often used in knowledge bases
to describe how concepts relate to each other.

4.2 Conversational Entities in a

Conversational World

A conversational entity is a virtual entity that ex-
ists in the context of the current conversation and
is either a conversational object or a conversational

275Speech	SynthesisSemantic	DecodingSpeech	RecognitionNatural	Language	GenerationOntologyBelief	State	TrackingDialoguePolicywaveformDialogueManagerFigure 3: Example mapping of a user utterance to
two objects and one relation.

relation. A conversational object may match a
real-world entity but does not need to. In fact, the
task of a goal-oriented dialogue is often to ﬁnd a
matching real-world entity based on the informa-
tion acquired by the system during the dialogue.
In the example dialogue (Fig. 1), matching entities
have already been found for both objects. How-
ever, a conversational object exists independently
of whether a matching real-world entity has been
found yet or even exists.

Derived from the object type deﬁnition, a con-
versational object comprises an internal state that
consists of the user goal belief su and the con-
text state sc as shown in the example in Figure 4.
There, su is depicted using marginal probabilities
for each slot (which is common in recent work on
statistical SDS). While the user goal belief models
the system’s belief of what the user wants based
on the user input, the context state models infor-
mation that the system has shared with the user. In
the example of Figure 4, the system has already
offered a matching real-world object based on the
user goal belief of the conversational object. If no
offer has been made yet, the context state is empty.
The context state plays an important role as ad-
dressed relations usually refer to the object offered
by the system instead of search constraints repre-
sented by the user goal belief. The context state
further allows to relate to attributes that have not
been mentioned in the dialogue.

One key aspect of the CEDM is that relations
are also modelled as a conversational entity. Thus,
these conversational relations also deﬁne a user
goal belief and a context state as shown in Fig-
ure 5. The attributes of the relation are cre-
ated out of the attributes of the objects they con-
In the given example, the attributes area
nect.
and pricerange of the two objects are connected
resulting in the relation attributes area2area and
pricerange2pricerange. The values of these at-
tributes are the actual relations, e.g., equals or
greater/less than. Similar to the slot belief of con-

Figure 4: Example of a conversational entity rep-
resenting object obj2 of type Restaurant. The user
goal belief models the search constraints the user
has provided to the system and the context state
represents the most recent real-world match of-
fered by the system.

Figure 5: Example of the conversational entity Re-
lation1 between obj1 and obj2. The user goal be-
lief models the search constraints the user has pro-
vided to the system and the context state represents
the relations based on the most recent real-world
matches for both objects offered by the system.

versational objects, each attribute is modelled with
a marginal probability over all possible relations.
Assigning part of the belief state to the relations
enables the system to speciﬁcally react to these re-
lations and even to address them in a system utter-
ance. Furthermore, if the context state of one of
the related objects changes (e.g., because the user
changed their mind), the relation may still persist.
Each conversational entity resides within a con-
versational world w (see Fig. 1) that deﬁnes the
number of objects and the type of each object (re-
lations may be derived from this) as well as gen-
eral state information. This world may either be
predeﬁned or needs to be derived from the user
input.
In the latter case, the user input is usu-
ally noisy and an uncertainty needs to be modelled
within the dialogue state. As this work focuses
on relation modelling, a predeﬁned conversational
world is used leaving the uncertainty modelling of
conversational worlds for future work.

4.3 Belief Tracking and Focus of Attention
The task of belief tracking is to update the proba-
bility distribution b(cid:48)(s) over the states s based on

276I	need	a	hotel	and	a	restaurant	in	Cambridge	in	the	same	areaObj1:	HotelpricerangeareastarsObj2:	Restaurantpricerangeareafood=Obj2:	RestaurantUser	goal	beliefnamepricerangeareafoodrequestsContext	statenameGolden	House	pricerangecheapareacentrefoodchinesepost	codeCB2	1EGphone	number01842	753771	address12	lensfieldroad	city	centreRelation1:	obj1	–obj2Context	statepricerange2	pricerange>area	2	area=User	goal	beliefpricerange2	pricerangearea	2	arearequeststhe system action a, the observation o of the user
input and the previous probability distribution b:

b(cid:48)(s) = P (s|o, a, b) .

(3)
With the additional complexity of the CEDM hav-
ing an unknown number of entities in a conversa-
tional world, we propose to decompose the state s
in the spirit of work by Williams et al. (2005). The
belief update for each entity e is then deﬁned as
e(u, su, sc, he) = P (u, su, sc, he|a, o, be) ,
b(cid:48)
(4)
where su is the user goal state of entity e, sc the
context state of e, he the dialogue history of e and
u the last user action3.

The belief update for the world belief bw is
w(u, sw, hw) = P (u, sw, hw|a, o, bw) ,
b(cid:48)

(5)
where sw is the world state of world w, hw the
dialogue history and u the last user action.

This multi-part belief allows hierarchical dia-
logue processing on the world level and the en-
tity level as depicted in Figure 6. Each level pro-
duces its own belief and based on that, the sys-
tem is able to act on each level. On the world
level, the system might produce general dialogue
behaviour like greetings or engage in a dialogue to
adequately identify the entity which is addressed
by the user input. On the entity level, the system
talks to the user to acquire information about the
concrete entity the user is talking about, e.g., to
ﬁnd a matching entity in the knowledge base.

In addition to belief tracking, we would like to
introduce another concept called focus of atten-
tion. Based on work by Grosz (1978), we deﬁne
the current focus of attention F for each conver-
sational world as a subset of conversational enti-
ties in this world F ⊆ W . Hence, the task of
focus tracking is to ﬁnd the new set of conversa-
tional entities which is in the current focus of at-
tention based on the user input and the updated be-
lief state. Even though the concept of focus is not
mandatory, it may be helpful when framing the re-
inforcement learning problem as it allows to limit
the size of the input to the reinforcement learning
algorithm as well as the number of actions avail-
able to the learning algorithm at a given time. Us-
ing F may also prevent the system from acting in
parts of the belief state that are completely irrele-
vant to the current part of the conversation.

3In case of an unknown number of entities represented
by a probability over worlds, the probability in Equation 4
needs to be extended to depend on the conversational world
and needs to be multiplied by a probability over all worlds.

world level world general behaviour
entity level
entity speciﬁc behaviour

bw

be

Figure 6: The layered model of the CEDM with
the respective components of the belief state.

4.4 The Conversational Entity vs. the

Multi-Domain Dialogue Model

The functionality and the modelling possibilities
of the proposed CEDM go beyond (and thus in-
clude) the possibilities of the multi-domain dia-
logue model (MDDM). To demonstrate this, we
will outline how a dialogue using the MDDM may
be modelled using the CEDM. The core concept
domain of the MDDM may be mapped to one
conversational object of a speciﬁc type where the
slots of the domain are the attributes of the type.
Since the number of domains is predeﬁned, there
is only one conversational world with a set num-
ber of conversational objects. Relations may not
be modelled using the MDDM. Belief update is re-
duced to ﬁnding the right entity for the user input
and updating its state. In the CEDM, the semantic
decoding of user input includes the entity (or en-
tity type) it refers to, which is similar to the topic
tracker of the MDDM where the topic tracker also
deﬁnes the domain the system acts in. Hence, the
focus of attention will always contain only the en-
tity that has been addressed by the user. By that,
a policy for each conversational object (and thus
object type) may be trained which is the same as
the domain policies of the MDDM.

5 Relation Modelling Evaluation
To demonstrate the capabilities and beneﬁts of the
conversational entity dialogue model (CEDM), the
aspect of relation modelling has been selected as
it is a core concept of the CEDM. For this, we
built upon the mapping to the multi-domain dia-
logue model (MDDM) as described in Section 4.4
and extend it with conversational relations. After a
brief description of the model implementation, the
experiments and their results are presented using
two conversational objects of different types. Note
that only the equals relation is considered here due
to limitations of the marginal belief state model.

5.1 Model Implementation
To implement all relevant aspects of the CEDM,
the publicly available open-source statistical dia-
logue system toolkit PyDial (Ultes et al., 2017) is

277used which originally follows the MDDM.
The main challenge for policy implementation
is to integrate both the state of the object in F
as well as the states of all corresponding rela-
tions into the dialogue decision. To achieve this,
a hierarchical policy model based on feudal re-
inforcement learning (Dayan and Hinton, 1993)
has been implemented following the approach
of Casanueva et al. (2018). For each object type,
a master policy decides whether the next system
action addresses a conversational relation or the
conversational object. A respective sub-policy is
then invoked in a second step where each object
type and each relation type are modelled by an in-
dividual policy. Thus, the model decomposes the
action selection problem to take account for the
speciﬁcities of the object policy and relation poli-
cies respectively and is able to handle a variable
number of relations. During training, all policies
(master and sub-policies) receive the same reward
signal.

Aside from the feudal RL architecture which
seems to be intuitive for the proposed CEDM, the
main problem is the handling of back-end data-
base access.
In the MDDM, each domain mod-
els all information which is necessary to do the
data-base lookup. However, this is not possible in
the CEDM as information from different conver-
sational objects and relations need to be taken into
account. One way of doing this is to apply a rule-
based merging of the state of the conversational
object in F with the states of all other conversa-
tional objects that are related through a conversa-
tional relation to form the focus state ˆb:

ˆbs(v) =

,

(6)

(cid:80)

(cid:80)

i wibi
i wi

s(v)

where s is the slot, v is the value, and bi the be-
lief of the i-th conversational entity involved in the
s(∅) is the weight of
merging process. wi = 1 − bi
s(∅) repre-
the i-th conversational entity where bi
sents the probability where no information about
slot s has yet been shared with the system. bi ei-
ther refers to the belief bo of the conversational
object o in F or to an already weighted belief ˜bo(cid:48)
originating from the conversational relation reloo(cid:48)
connecting conversational object o with o(cid:48):
˜bo(cid:48)
s (v) =

v (cid:54)= ∅
reloo(cid:48)
v = ∅
reloo(cid:48)
is the belief of object o(cid:48). The relation
where bo(cid:48)
probability rel is 0 if the slot s has no matching

s (=) · bo(cid:48)
s (=) · bo(cid:48)

s (v),
s (v) + reloo(cid:48)

s (∅),

(cid:40)

As an example, consider bo

slot in o(cid:48). Please note that for bo(cid:48)
s (v), even though
we refer to the belief, the context state of o(cid:48) is used
instead if not empty. The focus state is used as
input to the master policy as well as the sub-policy
of the conversational object.
s = [∅ : 0.3, v1 :
s = [∅ : 0.2, v1 : 0.0, v2 : 0.8],
0.7, v2 : 0.0], bo(cid:48)
s = [∅ : 0.1, =: 0.9]. This results
and reloo(cid:48)
s = [∅ : 0.28, v1 : 0.0, v2 : 0.78] and
in ˜bo(cid:48)
ˆbs = [∅ : 0.29, v1 : 0.35, v2 : 0.36]. This ex-
ample also shows that conﬂicts which may exists
between the state of the conversational object and
the state deﬁned by the relation are visible at this
level. To help the policy to learn in this situation,
an additional conﬂict bit is added to the focus be-
lief state as input to the master policy.

The source code of the CEDM implementation

is available at http://pydial.org/cedm.

5.2 Experimental Setup
To evaluate the relation modelling capabilities of
the CEDM, the task of ﬁnding a hotel and a restau-
rant in Cambridge has been selected (correspond-
ing to the CamRestaurants and CamHotels do-
mains of PyDial). The corresponding conversa-
tional world consists of two conversational objects
of types hotel and restaurant and one conversa-
tional relation. Based on the object type deﬁni-
tions, the conversational relation connects the slots
area and pricerange of both objects. Using a sim-
ulated environment, the goals of the simulated user
were generated so that at least one of these two
slots is related (i.e., contains the same value).

To test the inﬂuence of the user addressing the
relation instead of the correct value (e.g., ”restau-
rant in the same area as the hotel” vs. ”restaurant
in the centre”), we have extended the simulated
agenda-based user (Schatzmann and Young, 2009)
with a probability r of the user addressing the re-
lation instead of the value. The higher r, the more
often the user addresses the relation. The user sim-
ulator is equipped with an additional error model
to simulate the semantic error rate (SER) caused
in a real system by the noisy speech channel.

For belief tracking, an extended version of the
focus tracker (Henderson et al., 2014)—an effec-
tive rule-based tracker—was used for the conver-
sational entities and the conversational world that
also discounts probabilities if the respective value
has been rejected by the user. As a simulated in-
teraction is on the semantic level, no semantic de-

278coder for the relations is necessary. For training
and evaluation of the proposed framework, both
the master policy and all sub-policies are mod-
elled with the GP-SARSA algorithm (Gaˇsi´c and
Young, 2014). This is a value-based method that
uses a Gaussian process to approximate the state-
value function (Eq. 2). As it takes into account the
uncertainty of the estimate, it is sample-efﬁcient.
To compare the dialogue performance of the
CEDM with the MDDM baseline,
two experi-
ments have been conducted. All dialogues follow
the same structure: the user and the system ﬁrst
talk about one conversational object before mov-
ing on to the second object. As the user only ad-
dresses a relation to an object that has previously
been part of the dialogue, relations are only rele-
vant when talking about the second object. How-
ever, there are times where a relation has been ad-
dressed by the user before the goal of the ﬁrst ob-
ject changed which resulted in the addressed rela-
tion being wrong. This could only be resolved by
the system by addressing the relation itself.
Experiment 1 In the ﬁrst experiment, the inﬂu-
ence of r on the dialogue performance is investi-
gated in a controlled environment. Having a ﬁxed
order, only the feudal policy of the second ob-
ject (where relations may occur), the restaurant,
is learned. To avoid interfering effects of jointly
learning both policies at the same time, the ﬁrst
object hotel uses a handcrafted policy.
Experiment 2 The second experiment focusses
on the joint learning effects. Thus, the order of
objects is alternated, all objects use the feudal pol-
icy model and are trained simultaneously.

5.3 Results
The experiments have been conducted based on
the PyDial simulation environments Env. 1 and
Env. 3 speciﬁed by Casanueva et al. (2017) where
Env. 1 operates on a clean communication channel
with an SER of 0% and Env. 3 simulates an SER
of 15%. For each experiment, a policy for the re-
spective object types was trained with 4,000 and
tested with 1,000 dialogues. The reward was set
to +30/+0 for success/failure and -1 for each turn
with a maximum of 25 turns per object. The re-
sults were averaged over 5 different random seeds.
Experiment 1 As can be seen in Table 1 and Fig-
ure 7 on the left, the proposed CEDM with a feu-
dal policy model is easily able to deal with rela-
tions addressed by the user for any relation prob-

ability r in both environments. Success rate and
reward achieve similar results for all r. Only for
very high r, a small reduction in performance is
visible. This can be explained with the added com-
plexity of the dialogue itself as well as the system
actions that address the relations. A high relation
probability for a slot requires the system to address
either the relation or the slot value directly. Both
actions may have similar or contradicting impact
on the dialogue which makes it harder to learn a
good policy. In Env. 3, the added noise results in
minor ﬂuctuations which may be expected.

In contrast, the baseline (the MDDM) is not
able to handle the user addressing relations ade-
quately for higher r: while for low r, the policy
is able to compensate by requesting the respec-
tive information again, the performance drops at
around r = 0.5. The reason why the performance
of the baseline does not drop as much in Env. 3
as it does in Env. 1 is the way the simulated error
model of the simulated user operates. By produc-
ing a 3-best-list of user inputs, the chance that the
actual correct value is introduced as noise if a rela-
tion has originally been uttered is relatively high.
As the n-best-list of Env. 1 has the length of one,
this does not happen there.

The performance of the hand-crafted hotel pol-
icy was similar for all r in Env. 1 with rew =
23.4, suc = 99.7% and in Env. 3 with rew =
20.1, suc = 94.5%.

Analysing the system actions of the dialogues of
the CEDM shows that the system learns to address
a relation in up to 28% of all dialogues for r = 1.0.
Example dialogues for Env. 1 are shown in Fig-

ures 8 and 9.
Experiment 2 The results shown in Table 1 and
Figure 7 on the right show the performance of the
conversational object policies when the respective
object was the second one in the dialogue (where
relations occur). Still, policies of both objects
were trained in all dialogues. The effects of this
added noise become visible in the results as they
seem to be less stable. Furthermore, the over-
all performance for the restaurant policy drops a
bit, but still shows the same characteristics as in
Experiment 1. Learning a hotel policy results in
worse overall performance (which matches the lit-
erature) and in cases where a relation is involved.
The performance of the policy of the ﬁrst object
was similar for all r where the restaurant policy
achieved rew = 21.5, suc = 95.4% and the hotel

279Table 1: Reward and success rate of both experiments for different relation probabilities r comparing the proposed CEDM
to the MDDM baseline. The measures only show the performance of the second object in the dialogue where the relation is
relevant. All results are computed after 4,000/1,000 train/test dialogues and averaged over 5 trials with different random seeds.
Bold indicates statistically signiﬁcant outperformance (p < .05), italic indicates no statistically signiﬁcant difference.

Experiment 1

Experiment 2

Restaurant - Env. 1
base

CEDM

Restaurant - Env. 3
base

CEDM

Restaurant - Env. 3
base

CEDM

Hotel - Env. 3

CEDM

base

Suc. Rew.

Suc. Rew.

Suc. Rew.

Suc. Rew.

r Rew.
Suc.
0.0 23.3 99.3% 23.2 99.6% 20.4 94.3% 20.8 96.6% 20.1 95.0% 20.7 96.1% 16.5 86.7% 16.6 85.8%
0.1 23.1 99.5% 23.2 99.1% 20.5 94.7% 21.1 96.5% 20.3 94.4% 20.4 94.4% 16.5 86.4% 17.5 89.0%
0.3 23.2 99.5% 23.1 99.0% 20.2 93.6% 21.0 95.8% 19.7 93.6% 20.4 95.0% 16.2 85.5% 16.5 87.1%
0.5 22.8 99.6% 21.9 96.2% 19.8 92.8% 18.7 89.7% 19.7 92.5% 19.3 92.0% 14.6 80.8% 15.2 82.4%
0.7 22.6 99.2% 17.4 82.3% 19.9 92.9% 17.7 86.8% 19.2 91.6% 17.9 87.9% 16.7 86.9% 12.7 75.7%
0.9 22.5 99.4% 5.3
64.3% 8.1
61.5%
1.0 21.6 99.5% -3.6 11.7% 18.9 90.2% 13.9 76.8% 17.9 88.3% 10.9 67.5% 13.8 79.4% 7.0
58.2%

41.6% 19.3 91.2% 15.0 79.8% 18.2 89.5% 14.2 78.2% 9.8

Suc. Rew.

Suc. Rew.

Suc. Rew.

Figure 7: Reward and conﬁdence interval of Experiment 1 (left) and Experiment 2 (right) for different relation probabilities
r comparing the proposed CEDM to the MDDM baseline. The measures only show the performance of the second object in
the dialogue where the relation is relevant. All results are computed after 4,000/1,000 train/test dialogues and averaged over 5
trials with different random seeds.

policy rew = 18.8, suc = 90.2%.

Analysing the system actions of the dialogues
shows that the CEDM learns to address a relation
in up to 24.5% of all dialogues for r = 1.0.
6 Conclusion and Future Work
In this paper, we have presented a novel dialogue
model for statistical spoken dialogue systems that
is centred around objects and relations (instead of
domains) thus offering a new way of modelling
statistical dialogue. The two major advantages of
the new model are the capability of including mul-
tiple objects of the same type and the capability
of modelling and addressing relations between the
objects. By assigning a part of the belief state not
only to each object but to each relation as well, the
system is able to address the relations in a system
response.

We have demonstrated the importance of the as-
pect of relation modelling—a core functionality
of our proposed model—in simulated experiments
showing that by using a hierarchical feudal pol-

icy architecture, adequate policies may be learned
that lead to successful dialogues in cases where
relations are often mentioned by the user. Further-
more, the resulting policies also learned to address
the relation itself in the system response.

However, only a small part of the proposed
dialogue model has been evaluated in this pa-
per. To explore its full potential, many questions
need to be addressed in future work. For creat-
ing a suitable semantic decoder that is able to se-
mantically parse linguistic information about re-
lations, an extensive prior work on named entity
recognition and dependency parsing already ex-
ists and needs to be leveraged and applied to con-
duct real user experiments. Moreover, relations
other than equals need to be investigated. Fi-
nally, the challenges of identifying all conversa-
tional entities in the dialogue and assigning the
correct one to each user action as well as ﬁnd-
ing suitable belief-tracking approaches for the pro-
posed multi-layered architecture along with effec-
tive policy models need to be addressed.

280-505101520250.00.10.20.30.40.50.60.70.80.91.0RewardRelation	Probability	rbase	-Env.	1CEDM	-Env.	1base	-Env.	3CEDM	-Env.	3-505101520250.00.10.20.30.40.50.60.70.80.91.0RewardRelation	Probability	rbase	-CRCEDM	-CRbase	-CHCEDM	-CHAcknowledgments

This research was partly funded by the EPSRC
grant EP/M018946/1 Open Domain Statistical
Spoken Dialogue Systems.

References
Eric Bilange. 1991. An approach to oral dialogue mod-
In The Structure of Multimodal Dialogue;

elling.
Second VENACO Workshop.

Paweł Budzianowski, Stefan Ultes, Pei-Hao Su, Nikola
Mrkˇsi´c, Tsung-Hsien Wen, I˜nigo Casanueva, Lina
Rojas-Barahona, and Milica Gaˇsi´c. 2017.
Sub-
domain modelling for dialogue management with hi-
In Proceedings
erarchical reinforcement learning.
of the 18th Annual Meeting of the Special Inter-
est Group on Discourse and Dialogue (SIGDIAL),
pages 86–92. Association for Computational Lin-
guistics.

I˜nigo Casanueva, Paweł Budzianowski, Pei-Hao Su,
Nikola Mrkˇsi´c, Tsung-Hsien Wen, Stefan Ultes,
Lina Rojas-Barahona, Steve Young, and Milica
Gaˇsi´c. 2017. A benchmarking environment for re-
inforcement learning based task oriented dialogue
In Deep Reinforcement Learning
management.
Symposium, 31st Conference on Neural Information
Processing Systems (NIPS).

I˜nigo Casanueva, Paweł Budzianowski, Pei-Hao Su,
Stefan Ultes, Lina Rojas-Barahona, Bo-Hsiang
Tseng, and Milica Gaˇsi´c. 2018. Feudal reinforce-
ment learning for dialogue management in large do-
In Proc. of the Conference of the North
mains.
American Chapter of the Association for Computa-
tional Linguistics - Human Language Technologies
(HLT/NAACL).

Lucie Daubigney, Matthieu Geist, Senthilkumar Chan-
dramohan, and Olivier Pietquin. 2012. A compre-
hensive reinforcement learning framework for dia-
IEEE Journal of
logue management optimization.
Selected Topics in Signal Processing, 6(8):891–902.

Peter Dayan and Geoffrey E Hinton. 1993. Feudal re-
inforcement learning. In Advances in neural infor-
mation processing systems, pages 271–278.

Mihail Eric and Christopher D. Manning. 2017. Key-
value retrieval networks for task-oriented dialogue.
In Proceedings of the 18th Annual SIGdial Meeting
on Discourse and Dialogue, pages 37–49, Saarbr-
cken, Germany. Association for Computational Lin-
guistics.

Milica Gaˇsi´c, Nikola Mrkˇsi´c, Lina Rojas-Barahona,
Pei-Hao Su, Stefan Ultes, David Vandyke, Tsung-
Hsien Wen, and Steve Young. 2017. Dialogue man-
ager domain adaptation using gaussian process re-
inforcement learning. Computer Speech and Lan-
guage, 45:552–569.

Milica Gaˇsi´c and Steve J. Young. 2014.

Gaus-
sian processes for POMDP-based dialogue manager
IEEEACM Transactions on Audio,
optimization.
Speech, and Language Processing, 22(1):28–40.

Barbara J. Grosz. 1977. The representation and use of
focus in dialogue understanding. Technical report,
SRI International Menlo Park United States.

Barbara J. Grosz. 1978. Focusing in dialog.

In Pro-
ceedings of the 1978 Workshop on Theoretical Is-
sues in Natural Language Processing, TINLAP ’78,
pages 96–103, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Tobias Heinroth and Wolfgang Minker. 2013.

Intro-
ducing Spoken Dialogue Systems into Intelligent En-
vironments. Springer, Boston (USA).

Matthew Henderson, Blaise Thomson, and Jason
Williams. 2014. The second dialog state tracking
In 15th Annual Meeting of the Special
challenge.
Interest Group on Discourse and Dialogue, volume
263.

Sungjin Lee and Amanda Stent. 2016. Task lineages:
Dialog state tracking for ﬂexible interaction. In SIG-
Dial, pages 11–21, Los Angeles. ACL.

Oliver Lemon and Olivier Pietquin. 2012. Data-Driven
Methods for Adaptive Spoken Dialogue Systems.
Springer New York.

Jiwei Li, Will Monroe, Alan Ritter, Michel Galley,
Jianfeng Gao, and Dan Jurafsky. 2016. Deep rein-
forcement learning for dialogue generation. In Pro-
ceedings of the 2016 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1192–
1202. Association for Computational Linguistics.

Pierre Lison. 2011. Multi-policy dialogue manage-
In Proceedings of the SIGDIAL 2011 Con-
ment.
ference, pages 294–300. Association for Computa-
tional Linguistics.

Georgios Meditskos, Stamatia Dasiopoulou, Louisa
Pragst, Stefan Ultes, Stefanos Vrochidis, Ioannis
Kompatsiaris, and Leo Wanner. 2016. Towards an
ontology-driven adaptive dialogue framework.
In
Proceedings of the 1st International Workshop on
Multimedia Analysis and Retrieval for Multimodal
Interaction, pages 15–20. ACM.

Germ´an Montoro, Xavier Alam´an, and Pablo A Haya.
2004. A plug and play spoken dialogue interface for
smart environments. In International Conference on
Intelligent Text Processing and Computational Lin-
guistics, pages 360–370. Springer.

Alexandros Papangelis and Yannis Stylianou. 2017.
Single-model multi-domain dialogue management
with deep learning. In International Workshop for
Spoken Dialogue Systems.

281Jason D Williams, Kavosh Asadi, and Geoffrey Zweig.
2017. Hybrid code networks: practical and efﬁcient
end-to-end dialog control with supervised and rein-
forcement learning. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 665–
677, Vancouver, Canada. Association for Computa-
tional Linguistics.

Jason D. Williams, Pascal Poupart, and Steve J. Young.
2005. Factored partially observable markov deci-
In 4th
sion processes for dialogue management.
Workshop on Knowledge and Reasoning in Practi-
cal Dialog Systems, International Joint Conference
on Artiﬁcial Intelligence (IJCAI), pages 76–82.

Jason D. Williams and Steve J. Young. 2006. Scal-
ing pomdps for dialog management with compos-
ite summary point-based value iteration (cspbvi). In
AAAI Workshop on Statistical and Empirical Ap-
proaches for Spoken Dialogue Systems, pages 37–
42.

Yushi Xu and Stephanie Seneff. 2010. Dialogue man-
agement based on entities and constraints. In Pro-
ceedings of the 11th Annual Meeting of the Special
Interest Group on Discourse and Dialogue, pages
87–90. Association for Computational Linguistics.

Steve J. Young, Milica Gaˇsi´c, Simon Keizer, Franc¸ois
Mairesse, Jost Schatzmann, Blaise Thomson, and
Kai Yu. 2010. The hidden information state model:
A practical framework for POMDP-based spoken
dialogue management. Computer Speech & Lan-
guage, 24(2):150–174.

Steve J. Young, Milica Gaˇsi´c, Blaise Thomson, and Ja-
son D. Williams. 2013. POMDP-based statistical
spoken dialog systems: A review. Proceedings of
the IEEE, 101(5):1160–1179.

Baolin Peng, Xiujun Li, Lihong Li, Jianfeng Gao,
Asli Celikyilmaz, Sungjin Lee, and Kam-Fai Wong.
2017. Composite task-completion dialogue policy
learning via hierarchical deep reinforcement learn-
ing. In Proceedings of the 2017 Conference on Em-
pirical Methods in Natural Language Processing,
pages 2231–2240. Association for Computational
Linguistics.

Louisa Pragst, Stefan Ultes, Matthias Kraus, and Wolf-
gang Minker. 2015. Adaptive dialogue management
in the kristina project for multicultural health care
In Proceedings of the 19thWorkshop
applications.
on the Semantics and Pragmatics of Dialogue (SEM-
DIAL), pages 202–203.

Deepak Ramachandran and Adwait Ratnaparkhi. 2015.
Belief tracking with stacked relational trees. In Pro-
ceedings of the 16th Annual Meeting of the Special
Interest Group on Discourse and Dialogue, pages
68–76.

Jost Schatzmann and Steve J. Young. 2009. The hid-
den agenda user simulation model. Audio, Speech,
and Language Processing, IEEE Transactions on,
17(4):733–747.

Hannes Schulz, Jeremie Zumer, Layla El Asri, and
Shikhar Sharma. 2017. A frame tracking model for
memory-enhanced dialogue systems. arXiv preprint
arXiv:1706.01690.

Iulian Vlad Serban, Alessandro Sordoni, Yoshua Ben-
gio, Aaron C Courville, and Joelle Pineau. 2016.
Building end-to-end dialogue systems using gener-
ative hierarchical neural network models. In AAAI,
pages 3776–3784.

Pei-Hao Su, Paweł Budzianowski, Stefan Ultes, Mil-
ica Gasic, and Steve Young. 2017. Sample-efﬁcient
actor-critic reinforcement learning with supervised
In SIGdial, pages
data for dialogue management.
147–157, Saarbrcken, Germany. ACL.

Richard S. Sutton and Andrew G. Barto. 1998. Re-
inforcement Learning: An Introduction, 1st edition.
MIT Press, Cambridge, MA, USA.

Blaise Thomson and Steve J. Young. 2010. Bayesian
update of dialogue state: A POMDP framework for
spoken dialogue systems. Computer Speech & Lan-
guage, 24(4):562–588.

Stefan Ultes, Lina M. Rojas-Barahona, Pei-Hao Su,
David Vandyke, Dongho Kim, I˜nigo Casanueva,
Paweł Budzianowski, Nikola Mrkˇsi´c, Tsung-Hsien
Wen, Milica Gaˇsi´c, and Steve J. Young. 2017. Py-
dial: A multi-domain statistical dialogue system
In ACL Demo. Association of Computa-
toolkit.
tional Linguistics.

Zhuoran Wang, Hongliang Chen, Guanchun Wang,
Hao Tian, Hua Wu, and Haifeng Wang. 2014. Policy
learning for domain selection in an extensible multi-
domain spoken dialogue system. In Proceedings of
the 2014 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 57–67.

282A Example Dialogues

1:
Sys
2: User

3:

Sys

4: User
5:
Sys

6: User
7:
Sys

8: User
9:
Sys

10: User
11:
Sys
12: User
13:
Sys
14: User
15:
Sys

16: User
17:
Sys
18: User
19:
Sys

20: User
21:
Sys

hello()
inform(CamHotels#type=”placetostay”, CamHotels#area=”west”, CamHotels#pricerange=”moderate”,
CamHotels#kind=”guesthouse”)
inform(CamHotels#kind=”guesthouse”, CamHotels#pricerange=”moderate”, CamHotels#name=”hobsons
house”, CamHotels#area=”west”)
reqalts()
inform(CamHotels#name=”none”, CamHotels#name!=”hobsons house”, CamHotels#kind=”guesthouse”,
CamHotels#pricerange=”moderate”, CamHotels#area=”west”)
reqalts(CamHotels#area=”north”)
inform(CamHotels#kind=”guesthouse”, CamHotels#pricerange=”moderate”,
CamHotels#name=”limehouse”, CamHotels#area=”north”)
request(CamHotels#price)
inform(CamHotels#name=”limehouse”, CamHotels#price=”a cheapest single room is 40 pounds and a
cheapest double room is 75 pounds”)
inform(CamRestaurants#type=”restaurant”, CamRestaurants#food=”british”)
request(CamRestaurants#pricerange)
inform(CamRestaurants#pricerange=”moderate”)
request(CamRestaurants#area)
inform(CamRestaurants#area=CamHotels#area)
inform(CamRestaurants#name=”none”, CamRestaurants#food=”british”,
CamRestaurants#pricerange=”moderate”, CamRestaurants#area=”north”)
negate(CamRestaurants#area=”west”)
conﬁrm(CamHotels#area=CamRestaurants#area)
negate(CamRestaurants#area=”west”)
inform(CamRestaurants#food=”british”, CamRestaurants#pricerange=”moderate”,
CamRestaurants#name=”saint johns chop house”, CamRestaurants#area=”west”)
bye()
bye()

Figure 8: An example simulated dialogue using the proposed CEDM (Experiment 1, Env. 1, r = 0.7)
about ﬁnding a hotel ﬁrst (blue) followed by a restaurant (green). The system is able to process user input
addressing a relation (Turn 14) as well as to address the relation in a system utterance (Turn 17). The
dialogue nicely shows how the system is able to resolve a conﬂict between the belief of the conversational
relation and the belief of the conversational object (i.e., CamRestaurants#area = CamHotels#area vs.
CamRestaurants#area = ”west”).

Sys
1:
2: User

3:

Sys

4: User
5:
Sys
6: User

7:
Sys
8: User
9:
Sys
10: User
11:
Sys
12: User
13:
Sys
14: User
15:
Sys

16: User
17:
Sys

hello()
inform(CamHotels#type=”placetostay”, CamHotels#kind=”hotel”, CamHotels#area=”north”,
CamHotels#stars=”2”)
inform(CamHotels#kind=”hotel”, CamHotels#name=”lovell lodge”, CamHotels#stars=”2”,
CamHotels#area=”north”)
conﬁrm(CamHotels#kind=”hotel”)
inform(CamHotels#name=”lovell lodge”, CamHotels#kind=”hotel”)
inform(CamRestaurants#type=”restaurant”, CamRestaurants#food=”chinese”,
CamRestaurants#pricerange=”expensive”)
request(CamRestaurants#area)
inform(CamRestaurants#area=CamHotels#area)
request(CamRestaurants#area)
inform(CamRestaurants#area=CamHotels#area)
request(CamRestaurants#area)
inform(CamRestaurants#area=CamHotels#area)
request(CamRestaurants#area)
inform(CamRestaurants#area=”north”)
inform(CamRestaurants#food=”chinese”, CamRestaurants#pricerange=”expensive”,
CamRestaurants#name=”hakka”, CamRestaurants#area=”north”)
bye()
bye()

Figure 9: An example dialogue using the MDDM (Experiment 1, Env. 1, r = 0.7) about ﬁnding a hotel
ﬁrst (blue) followed by a restaurant (green). As the system is not able to process user input addressing a
relation it keeps requesting the same information (Turns 7-12: CamRestaurants#area) over and over until
the user ﬁnally utters the actual value of the area (Turn 14: CamRestaurants#area=”north”) which then
leads to a successful dialogue.

283